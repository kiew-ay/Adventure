@startuml
' Packages for the Adventure RPG

'===============================================================================
' SKINPARAMS
'-------------------------------------------------------------------------------
skinparam class {
    BorderColor<<Module>> Gray
    BackgroundColor<<Module>> LightGray
}
skinparam object {
    BorderColor Black
    BackgroundColor Violet
}


'===============================================================================
' PACKAGES
'-------------------------------------------------------------------------------
'_______________________________________________________________________________
package Setting <<Folder>> {
    class Room {
        contents : []
        doors : []
        self.discovered : False
        describe(self)
    }

    class Map {
        draw_map()
        draw_room()
        draw_minimap()
    }
}

'_______________________________________________________________________________
package Character <<Folder>> {
    class Character {
        name : ''
        image : ''
        hp : 100
    }
    class Protagonist {
        body_type : ''
        mind_type : ''
        inventory : []
        skills : []
    }

    '----------------------------------
    class Enemy {
        skills : []
        inventory : []
    }
    Character <|-- Protagonist
    Character <|-- Enemy

    '----------------------------------
    class Interactible {
        inspect(self)
    }
    class Item {
        pick_up(self)
        use(self)
    }   
    Interactible <|-- Item

    '----------------------------------
    class Door {
        self.rooms = [room1, room2]
        self.key : None
        self.status : (closed, unlocked)
        unlock(self)
        open(self)
        'toggle current_room between rooms in self.rooms
        use(self): Toggle current_room
    }
    Interactible <|-- Door
}

'_______________________________________________________________________________
package Conflict <<Folder>> {
    class Conflict {
        display_options()
        process_interaction()
        summarize_conflict()
    }

    class ConflictManager {
        generate_conflict()
    }
}

'_______________________________________________________________________________
package UserInterface <<Folder>> {
    class UI {
        system : 'Linux'

        describe_setting()
        prompt("question")
        prompt_list("question", options=[])
        prompt_dict("question", options={})
    }

    class Visualizer {
        draw_screen()
    }
}

'_______________________________________________________________________________
package Plot <<Folder>> {
    class Checker {
        win_conditions : []
        lose_conditions : []
        trigger_events : []

        add_win_condition()
        add_lose_condition()
        check_win_conditions()
        check_lose_conditions()
        check_trigger_events()
        cut_scene()
    }

    '----------------------------------
    class Condition {
        die()
        is_in()
        less_than()
        greater_than()
        equal_to()
        less_than_or_equal_to()
        greater_than_or_equal_to()
    }
}

'_______________________________________________________________________________
package WorldCreator <<Folder>> {
    class Init <<Module>> {
        ' VARIABLES
        character_name : ""
        character_mind_type : ""
        character_body_type : ""

        ' METHODS
        read_mission()
        read_settings()
        read_characters()
        
        generate_map()
        generate_characters()
        generate_plot()
    }

    '----------------------------------
    class Main <<Module>> {
        ' VARIABLES
        inventory : []
        current_room : room_1
        game_state : {}

        ' METHODS
        draw_scene()
        prompt_user()
        generate_conflict()
        modify_stats()
    }
}

'_______________________________________________________________________________
package Mission <<Folder>> {
    class InitialState <<Module>> {
        start_room : room_1
    }

    'class Generator {
    '}
}


'===============================================================================
' OBJECTS, INSTANTIATORS, and RELATIONSHIPS
'-------------------------------------------------------------------------------
WorldCreator .. Mission

object hero
Protagonist <|-- hero

object skeleton
Enemy <|-- skeleton

object diamond
Item <|-- diamond

object key
Item <|-- key

object conflict
Conflict <|-- conflict
ConflictManager ..> conflict

object room_1
object room_2
Room <|-- room_1
Room <|-- room_2

object door_1_2
Door <|-- door_1_2
room_1 .. door_1_2
door_1_2 .. room_2

UI .. Visualizer
Visualizer .. Map


'===============================================================================
' FORMATTING & LAYOUT
'-------------------------------------------------------------------------------
hide <<Module>> circle
hide <<Module>> stereotype
hide <<Object>> circle
hide <<Object>> stereotype
'===============================================================================
@enduml
